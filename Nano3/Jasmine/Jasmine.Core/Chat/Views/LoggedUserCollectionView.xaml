<UserControl x:Class="Jasmine.Core.Chat.Views.LoggedUserCollectionView"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:local="clr-namespace:Jasmine.Core.Chat.Views"
	xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
			 xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
			 xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
			 xmlns:helpers="clr-namespace:Jasmine.Core.Helpers"
			xmlns:prism="http://prismlibrary.com/"
   xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
   xmlns:core="clr-namespace:Jasmine.Core.Dialogs"
   xmlns:converters="clr-namespace:Jasmine.Core.Converters"
			 prism:ViewModelLocator.AutoWireViewModel="True"
			 mc:Ignorable="d" 
			 d:DesignHeight="450" d:DesignWidth="800">
	<dxmvvm:Interaction.Behaviors>
		<dxmvvm:DispatcherService />
		<dx:DXMessageBoxService />
		<dx:DXSplashScreenService>
			<dx:DXSplashScreenService.ViewTemplate>
				<DataTemplate>
					<core:JasmineWaitIndicator />
				</DataTemplate>
			</dx:DXSplashScreenService.ViewTemplate>
		</dx:DXSplashScreenService>
		<dxmvvm:NotificationService CustomNotificationPosition="BottomRight" CustomNotificationVisibleMaxCount="1">
			<dxmvvm:NotificationService.CustomNotificationTemplate>
				<DataTemplate>
					<dx:BackgroundPanel>
						<Border BorderThickness="1" BorderBrush="Black" Loaded="Border_Loaded">
							<StackPanel Margin="5">
								<TextBlock Margin="5"  Text="{Binding Type}" FontWeight="Bold" FontSize="15"/>
								<TextBlock Margin="5" Text="{Binding Message}" FontSize="12" TextWrapping="Wrap"/>
							</StackPanel>
						</Border>
					</dx:BackgroundPanel>
				</DataTemplate>
			</dxmvvm:NotificationService.CustomNotificationTemplate>
		</dxmvvm:NotificationService>
	</dxmvvm:Interaction.Behaviors>
	<UserControl.Resources>
		<dxmvvm:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
		<converters:ByteBitmapSourceConverter x:Key="ByteBmpSrcConverter"/>
		<dx:NullableToVisibilityConverter x:Key="NullableToVisibilityConverter"/>
		<BitmapImage x:Key="BlankImage" UriSource="/Jasmine.Core;component/Chat/Images/generic-user-purple.png"/>

		<Style x:Key="{dxet:EditorListBoxThemeKey ResourceKey=DefaultItemStyle, ThemeName=VS2017Dark}" TargetType="{x:Type dxe:ListBoxEditItem}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type dxe:ListBoxEditItem}">
						<Grid x:Name="Root">
							<Rectangle x:Name="IsFocus"
																		   Opacity="0"
																		   StrokeDashArray="1 2"
																		   StrokeThickness="1" />
							<Border x:Name="IsDefault"
																	Background="Transparent"
																	BorderBrush="{Binding Foreground, Source={x:Static helpers:ColorHelper.Instance}}"
																	BorderThickness="0,0,0,0.1"
																	SnapsToDevicePixels="True">
								<ContentPresenter />
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="True">
								<Setter TargetName="IsFocus" Property="Opacity" Value="1" />
							</Trigger>
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="IsDefault" Property="Background" Value="#FF007ACC" />
								<Setter TargetName="IsDefault" Property="BorderBrush" Value="#FF007ACC" />
								<Setter TargetName="IsFocus" Property="Opacity" Value="0" />
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="True" />
									<Condition Property="IsFocused" Value="False" />
								</MultiTrigger.Conditions>
								<Setter TargetName="IsDefault" Property="Background" Value="#FF007ACC" />
								<Setter TargetName="IsDefault" Property="BorderBrush" Value="#FF007ACC" />
								<Setter TargetName="IsDefault" Property="Opacity" Value="0.62" />
							</MultiTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Value="True" Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).AllowItemHighlighting, RelativeSource={RelativeSource Self}}" />
									<Condition Value="True" Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" />
									<Condition Value="False" Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" />
								</MultiDataTrigger.Conditions>
								<Setter TargetName="IsDefault" Property="Background" Value="#FF3E3E40" />
								<Setter TargetName="IsDefault" Property="BorderBrush" Value="#FF3E3E40" />
							</MultiDataTrigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter TargetName="Root" Property="Opacity" Value="0.38" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="{dxet:EditorListBoxThemeKey ResourceKey=DefaultItemStyle, ThemeName=VS2017Light}" TargetType="{x:Type dxe:ListBoxEditItem}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type dxe:ListBoxEditItem}">
						<Grid x:Name="Root">
							<Rectangle x:Name="IsFocus"
																		   Opacity="0"
																		   StrokeDashArray="1 2"
																		   StrokeThickness="1" />
							<Border x:Name="IsDefault"
																		Background="Transparent"
																		BorderBrush="{Binding Foreground, Source={x:Static helpers:ColorHelper.Instance}}"
																		BorderThickness="0,0,0,0.1"
																		SnapsToDevicePixels="True">
								<ContentPresenter />
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="True">
								<Setter TargetName="IsFocus" Property="Opacity" Value="1" />
							</Trigger>
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="IsDefault" Property="Background" Value="#FF007ACC" />
								<Setter TargetName="IsDefault" Property="BorderBrush" Value="#FF007ACC" />
								<Setter TargetName="IsFocus" Property="Opacity" Value="0" />
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="True" />
									<Condition Property="IsFocused" Value="False" />
								</MultiTrigger.Conditions>
								<Setter TargetName="IsDefault" Property="Background" Value="#FF007ACC" />
								<Setter TargetName="IsDefault" Property="BorderBrush" Value="#FF007ACC" />
								<Setter TargetName="IsDefault" Property="Opacity" Value="0.62" />
							</MultiTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Value="True" Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).AllowItemHighlighting, RelativeSource={RelativeSource Self}}" />
									<Condition Value="True" Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" />
									<Condition Value="False" Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" />
								</MultiDataTrigger.Conditions>
								<Setter TargetName="IsDefault" Property="Background" Value="#FFC9DEF5" />
								<Setter TargetName="IsDefault" Property="BorderBrush" Value="#FFC9DEF5" />
							</MultiDataTrigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter TargetName="Root" Property="Opacity" Value="0.38" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="{dxet:EditorListBoxThemeKey ResourceKey=DefaultItemStyle, ThemeName=VS2017Blue}" TargetType="{x:Type dxe:ListBoxEditItem}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type dxe:ListBoxEditItem}">
						<Grid x:Name="Root">
							<Rectangle x:Name="IsFocus"
																		   Opacity="0"
																		   StrokeDashArray="1 2"
																		   StrokeThickness="1" />
							<Border x:Name="IsDefault"
																		Background="Transparent"
																		BorderBrush="{Binding Foreground, Source={x:Static helpers:ColorHelper.Instance}}"
																		BorderThickness="0,0,0,0.1"
																		SnapsToDevicePixels="True">
								<ContentPresenter />
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="True">
								<Setter TargetName="IsFocus" Property="Opacity" Value="1" />
							</Trigger>
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="IsDefault" Property="Background" Value="#FFFFF29D" />
								<Setter TargetName="IsDefault" Property="BorderBrush" Value="#FFFFF29D" />
								<Setter TargetName="IsFocus" Property="Opacity" Value="0" />
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="True" />
									<Condition Property="IsFocused" Value="False" />
								</MultiTrigger.Conditions>
								<Setter TargetName="IsDefault" Property="Background" Value="#FFFFF29D" />
								<Setter TargetName="IsDefault" Property="BorderBrush" Value="#FFFFF29D" />
								<Setter TargetName="IsDefault" Property="Opacity" Value="0.62" />
							</MultiTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Value="True" Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).AllowItemHighlighting, RelativeSource={RelativeSource Self}}" />
									<Condition Value="True" Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" />
									<Condition Value="False" Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" />
								</MultiDataTrigger.Conditions>
								<Setter TargetName="IsDefault" Property="Background" Value="#FFFDF4BF" />
								<Setter TargetName="IsDefault" Property="BorderBrush" Value="#FFFDF4BF" />
							</MultiDataTrigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter TargetName="Root" Property="Opacity" Value="0.38" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="{dxet:EditorListBoxThemeKey ResourceKey=DefaultItemStyle, ThemeName=Office2016BlackSE}" TargetType="{x:Type dxe:ListBoxEditItem}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type dxe:ListBoxEditItem}">
						<Grid x:Name="Root">
							<Rectangle x:Name="IsFocus"
																		   Opacity="0"
																		   StrokeDashArray="1 2"
																		   StrokeThickness="1" />
							<Border x:Name="IsDefault"
																		Background="Transparent"
																		BorderBrush="{Binding Foreground, Source={x:Static helpers:ColorHelper.Instance}}"
																		BorderThickness="0,0,0,0.1"
																		SnapsToDevicePixels="True">
								<ContentPresenter />
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="True">
								<Setter TargetName="IsFocus" Property="Opacity" Value="1" />
							</Trigger>
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="IsDefault" Property="Background" Value="#FF6A6A6A" />
								<Setter TargetName="IsDefault" Property="BorderBrush" Value="#FF6A6A6A" />
								<Setter TargetName="IsFocus" Property="Opacity" Value="0" />
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="True" />
									<Condition Property="IsFocused" Value="False" />
								</MultiTrigger.Conditions>
								<Setter TargetName="IsDefault" Property="Background" Value="#FF6A6A6A" />
								<Setter TargetName="IsDefault" Property="BorderBrush" Value="#FF6A6A6A" />
								<Setter TargetName="IsDefault" Property="Opacity" Value="0.62" />
							</MultiTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Value="True" Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).AllowItemHighlighting, RelativeSource={RelativeSource Self}}" />
									<Condition Value="True" Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" />
									<Condition Value="False" Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" />
								</MultiDataTrigger.Conditions>
								<Setter TargetName="IsDefault" Property="Background" Value="#FF505050" />
								<Setter TargetName="IsDefault" Property="BorderBrush" Value="#FF505050" />
							</MultiDataTrigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter TargetName="Root" Property="Opacity" Value="0.38" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<DataTemplate x:Key="ParticipantsDataTemplate">
			<Grid Margin="0 3 0 5">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="5"/>
					<ColumnDefinition Width="40"/>
					<ColumnDefinition/>
					<ColumnDefinition Width="32"/>
					<ColumnDefinition Width="20"/>
				</Grid.ColumnDefinitions>
				<Rectangle x:Name="ParticipantRct" Fill="Red"
							   Visibility="Hidden"/>
				<!--Pic-->
				<!--<Grid Grid.Column="1" Height="40">
					<Grid.OpacityMask>
						<VisualBrush Visual="{Binding ElementName=ClipEllipse}"/>
					</Grid.OpacityMask>
					<Ellipse x:Name="ClipEllipse" Fill="Black"/>
					<TextBlock Text="WA"/>
				</Grid>-->
				<Grid Grid.Column="1" Height="40">
					<Grid.OpacityMask>
						<VisualBrush Visual="{Binding ElementName=ClipEllipse}"/>
					</Grid.OpacityMask>
					<Ellipse x:Name="ClipEllipse" Fill="White"/>
					<Image Source="{Binding Photo, Converter={StaticResource ByteBmpSrcConverter},
							TargetNullValue={StaticResource BlankImage}}" Stretch="UniformToFill"/>
				</Grid>
				<!--Name-->
				<TextBlock Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Left"
							   Margin="5,0" FontWeight="SemiBold" TextTrimming="CharacterEllipsis"
							   Text="{Binding Name}" SnapsToDevicePixels="True"/>
				<!--Chat Icon-->    
				<Button x:Name="ChatIcon" Grid.Column="3" VerticalAlignment="Center" VerticalContentAlignment="Center"
															BorderBrush="Transparent" Background="Transparent" 
															Cursor="Hand" Content="Chat"
															Command="{Binding DataContext.ChatCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" CommandParameter="{Binding}">
					<Button.Style>
						<Style TargetType="Button">
							<Setter Property="Visibility" Value="{Binding HasUnreadMessage, Converter={StaticResource BooleanToVisibilityConverter}}"/>
						</Style>
					</Button.Style>
					<Button.Template>
						<ControlTemplate>
							<Image x:Name="ChatIcon"  Grid.Column="3" VerticalAlignment="Center" 
															Height="32"
															Source="../Images/chat.png"/>
						</ControlTemplate>
					</Button.Template>
				</Button>
				<!--Online-->
				<Ellipse Grid.Column="4" VerticalAlignment="Center" HorizontalAlignment="Center" 
							 Width="8" Height="8">
					<Ellipse.Style>
						<Style TargetType="Ellipse">
							<Setter Property="Fill" Value="#F44336"/>
							<Style.Triggers>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding DataContext.IsConnected, 
												RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" Value="True"/>
										<Condition Binding="{Binding IsLoggedIn}" Value="True"/>
									</MultiDataTrigger.Conditions>
									<MultiDataTrigger.Setters>
										<Setter Property="Fill" Value="#64DD17"/>
									</MultiDataTrigger.Setters>
								</MultiDataTrigger>
							</Style.Triggers>
						</Style>
					</Ellipse.Style>
				</Ellipse>
			</Grid>
			<DataTemplate.Triggers>
				<MultiDataTrigger>
					<MultiDataTrigger.Conditions>                        
						<Condition Value="True" Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" />                        
					</MultiDataTrigger.Conditions>
					<Setter TargetName="ChatIcon" Property="Visibility" Value="Visible" />
				</MultiDataTrigger>           
			</DataTemplate.Triggers>
		</DataTemplate>
	</UserControl.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>
		<Border BorderBrush="{Binding Foreground, Source={x:Static helpers:ColorHelper.Instance}}"
															BorderThickness="0,0,0,0.1" Padding="5,10,5,10">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<TextBlock Text="{Binding Participants.Count, StringFormat=Participants: {0}}" VerticalAlignment="Center"/>
				<StackPanel Grid.Column="1" Orientation="Horizontal" >
					<dxe:HyperlinkEdit Text="Refresh" Margin="0,0,10,0" ToolTipService.IsEnabled="False"
									   Command="{Binding RefreshCommand}"/>
					<Border BorderBrush="{Binding Foreground, Source={x:Static helpers:ColorHelper.Instance}}"
															BorderThickness="0.1,0,0,0"/>
					<Button VerticalAlignment="Center" VerticalContentAlignment="Center"
															BorderBrush="Transparent" Background="Transparent" 
															Margin="10,0,5,0" Cursor="Hand"
															Command="{Binding ManageChatSettingCommand}">
						<Button.Template>
							<ControlTemplate>
								<Image VerticalAlignment="Center" 
															Height="16" 
															Source="{dx:SvgImageSource Uri=../Images/Settings.svg}"/>
							</ControlTemplate>
						</Button.Template>
					</Button>
				</StackPanel>
			</Grid>
		</Border>
		<dxe:ListBoxEdit Grid.Row="1"
						 ItemsSource="{Binding Participants}"
						 ItemTemplate="{DynamicResource ParticipantsDataTemplate}"
						 SelectedItem="{Binding ActiveParticipant, Mode=OneWay}"
						 DisplayMember="Name"
						 ValueMember="Id"
						 HorizontalContentAlignment="Stretch"
						 Background="Transparent"
						 ShowBorder="False"
						 AllowItemHighlighting="True"
						 ScrollViewer.HorizontalScrollBarVisibility="Disabled" />
	</Grid>
</UserControl>
