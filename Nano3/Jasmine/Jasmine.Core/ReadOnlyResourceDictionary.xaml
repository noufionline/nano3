<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
					xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
					xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
					xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
					xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
					xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
					xmlns:prism="clr-namespace:Jasmine.Core.Common">
	<dxmvvm:BooleanNegationConverter x:Key="BooleanNegationConverter"/>
	<dxmvvm:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
	<dx:BoolToVisibilityInverseConverter x:Key="BoolToVisibilityInverseConverter"></dx:BoolToVisibilityInverseConverter>
	<Style TargetType="{x:Type dxe:BarCodeEdit}">
		<Setter Property="IsReadOnly" Value="{Binding (prism:Helper.IsReadOnly),
			RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}}"/>
	</Style>
	<Style TargetType="{x:Type dxe:ButtonEdit}">
		<Setter Property="IsReadOnly" Value="{Binding (prism:Helper.IsReadOnly), RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}}"/>
	</Style>
	<Style TargetType="{x:Type dxe:CheckEdit}">
		<Setter Property="IsReadOnly" Value="{Binding (prism:Helper.IsReadOnly), RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}}"/>
	</Style>
	<Style TargetType="{x:Type dxe:ColorEdit}">
		<Setter Property="IsReadOnly" Value="{Binding (prism:Helper.IsReadOnly), RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}}"/>
	</Style>
	<Style TargetType="{x:Type dxe:ComboBoxEdit}">
		<Setter Property="IsReadOnly" Value="{Binding (prism:Helper.IsReadOnly), RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}}"/>
		<Setter Property="AllowDefaultButton" Value="{Binding (prism:Helper.IsReadOnly), Converter={StaticResource BooleanNegationConverter}, RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}}"/>
	</Style>
	<Style TargetType="{x:Type dxe:DateEdit}">
		<Setter Property="IsReadOnly"
								Value="{Binding (prism:Helper.IsReadOnly), RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}}"/>
		<Setter Property="AllowDefaultButton"
								Value="{Binding (prism:Helper.IsReadOnly), Converter={StaticResource BooleanNegationConverter}, RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}}"/>
		<Setter Property="Mask" Value="dd-MMM-yyyy"/>
		<Setter Property="MaskUseAsDisplayFormat" Value="True"/>
	</Style>
	<Style TargetType="{x:Type dxe:FontEdit}">
		<Setter Property="IsReadOnly" Value="{Binding (prism:Helper.IsReadOnly), RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}}"/>
	</Style>
	<Style TargetType="{x:Type dxe:ImageEdit}">
		<Setter Property="IsReadOnly" Value="{Binding (prism:Helper.IsReadOnly), RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}}"/>
	</Style>
	<Style TargetType="{x:Type dxe:ListBoxEdit}">
		<Setter Property="IsReadOnly" Value="{Binding (prism:Helper.IsReadOnly), RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}}"/>
	</Style>
	<Style TargetType="{x:Type dxg:LookUpEdit}">
		<Setter Property="IsReadOnly" Value="{Binding (prism:Helper.IsReadOnly), RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}}"/>
		<Setter Property="AllowDefaultButton" Value="{Binding (prism:Helper.IsReadOnly), Converter={StaticResource BooleanNegationConverter}, RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}}"/>        
	 </Style>
	<!--<Style TargetType="{x:Type views:LookupItemEdit}">
		<Setter Property="IsReadOnly" Value="{Binding (prism:Helper.IsReadOnly), RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}}"/>
		<Setter Property="AllowDefaultButton" Value="{Binding (prism:Helper.IsReadOnly), Converter={StaticResource BooleanNegationConverter}, RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}}"/>
	</Style>-->
	<Style TargetType="{x:Type dxe:MemoEdit}">
		<Setter Property="IsReadOnly" Value="{Binding (prism:Helper.IsReadOnly), RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}}"/>
	</Style>
	<Style TargetType="{x:Type dxe:PasswordBoxEdit}">
		<Setter Property="IsReadOnly" Value="{Binding (prism:Helper.IsReadOnly), RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}}"/>
	</Style>
	<Style TargetType="{x:Type dxe:PopupCalcEdit}">
		<Setter Property="IsReadOnly" Value="{Binding (prism:Helper.IsReadOnly), RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}}"/>
	</Style>
	<Style TargetType="{x:Type dxe:PopupColorEdit}">
		<Setter Property="IsReadOnly" Value="{Binding (prism:Helper.IsReadOnly), RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}}"/>
	</Style>
	<Style TargetType="{x:Type dxe:PopupImageEdit}">
		<Setter Property="IsReadOnly" Value="{Binding (prism:Helper.IsReadOnly), RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}}"/>
	</Style>
	<Style TargetType="{x:Type dxe:ProgressBarEdit}">
		<Setter Property="IsReadOnly" Value="{Binding (prism:Helper.IsReadOnly), RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}}"/>
	</Style>
	<Style TargetType="{x:Type dxe:SparklineEdit}">
		<Setter Property="IsReadOnly" Value="{Binding (prism:Helper.IsReadOnly), RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}}"/>
	</Style>
	<Style TargetType="{x:Type dxe:SpinEdit}">
		<Setter Property="IsReadOnly"
								Value="{Binding (prism:Helper.IsReadOnly), RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}}"/>
	</Style>
	<Style TargetType="{x:Type dxe:TextEdit}">
		<Setter Property="IsReadOnly" Value="{Binding (prism:Helper.IsReadOnly), RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}}"/>
	</Style>
	<Style TargetType="{x:Type dxe:TrackBarEdit}">
		<Setter Property="IsReadOnly" Value="{Binding (prism:Helper.IsReadOnly), RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}}"/>
	</Style>
	<Style TargetType="{x:Type dxb:ToolBarControl}">
		<Setter Property="IsEnabled" Value="{Binding (prism:Helper.IsReadOnly), RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}, Converter={StaticResource BooleanNegationConverter}}"/>
	</Style>
	<Style TargetType="{x:Type Button}">
		<Setter Property="IsEnabled" Value="{Binding (prism:Helper.IsReadOnly), RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}, Converter={StaticResource BooleanNegationConverter}}"/>
	</Style>
	<!--<Style TargetType="{x:Type dxb:BarButtonItem}">
		<Setter Property="IsVisible" Value="{Binding (inf:Helper.IsReadOnly), RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}, Converter={StaticResource BooleanNegationConverter}}"/>
	</Style>-->
	<Style TargetType="{x:Type dxg:GridColumn}">
		<Setter Property="ReadOnly" Value="{Binding (prism:Helper.IsReadOnly), RelativeSource={RelativeSource AncestorType={x:Type dxlc:LayoutControl}}}"/>
	</Style>
</ResourceDictionary>